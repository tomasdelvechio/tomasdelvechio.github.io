<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tomás Delvechio (Publicaciones sobre devops)</title><link>http://tomasdelvechio.github.io/</link><description></description><atom:link href="http://tomasdelvechio.github.io/categories/devops.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:tdelvechio@unlu.edu.ar"&gt;Tomás Delvechio&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Thu, 27 Mar 2025 01:20:42 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Kompose: Migrar tus archivos Docker Compose a Kubernetes</title><link>http://tomasdelvechio.github.io/blog/kompose-migrar-tus-archivos-docker-compose-a-kubernetes/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;p&gt;En un &lt;a href="http://tomasdelvechio.github.io/blog/algunas-notas-sobre-kubernetes"&gt;post anterior&lt;/a&gt; desplegamos un
cluster de pruebas con contenedores usando &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt; y
&lt;a href="https://github.com/kubernetes/minikube"&gt;Minikube&lt;/a&gt;. Este esquema resulta util
cuando lo que se quiere es desplegar y escalar un contenedor.&lt;/p&gt;
&lt;p&gt;Sin embargo, muchas aplicaciones Docker comenzaron a orquestarse utilizando mas
de un contenedor para hacer funcionar la misma. Por ejemplo, un contenedor con
un web server, otro para la base de datos relacional, y un tercero para una base
nosql.&lt;/p&gt;
&lt;p&gt;Para este tipo de esquemas surgio docker-compose. Permitia de forma sencilla
administrar la configuracion varios contenedores en simultaneo cuya imagen
origen eran diferentes.&lt;/p&gt;
&lt;p&gt;Para lograr un comportamiento similar con Kubernetes, existe la herramienta
&lt;a href="http://kompose.io"&gt;Kompose&lt;/a&gt;. Kompose nos permite tomar el contenido de un
archivo docker-compose.yml y realizar las mismas acciones, pero utilizando
Kubernetes.&lt;/p&gt;
&lt;h3&gt;Uso basico&lt;/h3&gt;
&lt;p&gt;Como siempre, nos salteamos la parte de instalacion dado que es sencilla y se
encuentra documentada en la &lt;a href="http://kompose.io/installation/"&gt;pagina oficial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kompose es muy sencilla de utilizar. Puede hacer 2 tareas principales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tomar un archivo docker-compose.yml y convertirlo a archivos de configuracion
 de Kubernetes.&lt;/li&gt;
&lt;li&gt;Ejecutar el archivo docker-compose.yml directamente sin generar nuevos
 archivos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La forma mas sencilla de utilizar es la segunda, dado que contamos con un
proyecto con un archivo docker-compose.yml o en general conocemos ese formato
bastante. Entonces se ejecuta&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kompose up
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y eso ya levanta con Kubernetes todos los contenedores indicados.&lt;/p&gt;
&lt;h3&gt;Troubleshooting&lt;/h3&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kompose up

WARN Unsupported root level volumes key - ignoring 
WARN Unsupported depends_on key - ignoring        
WARN Volume mount on the host "." isn't supported - ignoring path on the host
&lt;/pre&gt;&lt;/div&gt;</description><category>cluster</category><category>containers</category><category>deploy</category><category>devops</category><category>kompose</category><category>kubernetes</category><category>orchestration</category><guid>http://tomasdelvechio.github.io/blog/kompose-migrar-tus-archivos-docker-compose-a-kubernetes/</guid><pubDate>Sun, 04 Feb 2018 19:28:51 GMT</pubDate></item><item><title>Algunas notas sobre Kubernetes</title><link>http://tomasdelvechio.github.io/blog/algunas-notas-sobre-kubernetes/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;p&gt;&lt;img alt="Logo Kubernetes" src="http://tomasdelvechio.github.io/img/blog/2018/logo-kubernetes.png" title="Logo de Kubernetes"&gt;&lt;/p&gt;
&lt;p&gt;Sistema para orquestación de cluster. Esto no es un tutorial, son notas sueltas
(personales) tomadas del &lt;a href="https://kubernetes.io"&gt;tutorial oficial&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;1. Crear un cluster&lt;/h3&gt;
&lt;p&gt;Kubernetes coordina un cluster para trabajar como una unica unidad. Para ello,
las apps necesitan ser empaquetadas en forma de containers.&lt;/p&gt;
&lt;p&gt;2 Recursos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Master: Coordinación y gestión el cluster&lt;/li&gt;
&lt;li&gt;Nodes: Son los workers del cluster (puede ser vm o nodo físico)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cada nodo tiene un Kubelet, un agente que coordina el nodo y maneja la
comunicación con el Master.&lt;/p&gt;
&lt;p&gt;Cada nodo debe poder realizar operaciones de containers, usando Docker o rkt
(Debe tenerlo instalado).&lt;/p&gt;
&lt;p&gt;Para debug se recomienda utilizar &lt;a href="https://github.com/kubernetes/minikube"&gt;Minikube&lt;/a&gt;.
Instala un cluster y facilita la configuracion de kubernetes (Instalarlo a mano
era complejo).&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Testear la version de minikube&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;minikube version
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Iniciar un cluster usando minikube&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;minikube start
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Linea de comandos de Kubernetes: &lt;code&gt;kubectl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Version de kubectl (Para verificar que esta instalado):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl version
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver información de cluster&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl cluster-info
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver nodos del cluster&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get nodes
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2. Crear deploys con kubectl&lt;/h3&gt;
&lt;p&gt;Una vez instalado Kubernetes, se deben crear aplicaciones en containers para ser
ejecutadas sobre el cluster. Para esto se definen instruccion que el master
ejecuta sobre los nodos.&lt;/p&gt;
&lt;p&gt;Kubernetes Deployment Controller monitoriza las instancias y si se caen, las
regenera nuevamente.&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Correr un ejemplo&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl run kubernetes-bootcamp \
    --image=docker.io/jocatalin/kubernetes-bootcamp:v1 \
    --port=8080
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver la app en ejecucion&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get deployments
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Generar un entrypoint al cluster (temporal para pruebas)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl proxy
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;3. Explorar la App&lt;/h3&gt;
&lt;p&gt;Un Pod es un conjunto de containers que ejecutan aplicaciones y sus recursos
asociados.&lt;/p&gt;
&lt;p&gt;Los Pods son creados por Kubernetes al realizar el deploy de la app. Se crean
siempre en un nodo.&lt;/p&gt;
&lt;p&gt;Operaciones mas usadas de &lt;code&gt;kubectl&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nv"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;get&lt;/span&gt;
&lt;span class="nv"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;describe&lt;/span&gt;
&lt;span class="nv"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;logs&lt;/span&gt;
&lt;span class="nv"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Listar pods&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get pods
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para obtener información detallada de los Pods&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl describe pods
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para acceder a los Pods, que funcionan en una red aislada y privada, se utiliza
el &lt;code&gt;proxy&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl proxy
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dicho proxy expone temporalmente la red y permite la comunicación con el host.
Esto se utiliza para acceder a la API de los Pods y realizar consultas de forma
directa (Por ejemplo, usando el comando &lt;code&gt;curl&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Para diversas operaciones con los pods, es necesario obtener el nombre que
Kubernetes le asigno al mismo. Un comando para hacer esto es:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;POD_NAME&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pods&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'{{range .items}}{{.metadata.name}}{{"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;"}}{{end}}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ver los logs:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl logs $POD_NAME
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Todo lo que los proceso envien a stdout es expuesto como logs del pod.&lt;/p&gt;
&lt;p&gt;Ejecutar comandos en un pod:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl exec $POD_NAME env
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Abrir una consola en un POD:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl exec -ti $POD_NAME bash
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;4. Usar un servicio para exponer la App&lt;/h3&gt;
&lt;p&gt;Los Pods pueden ser reemplazados si es necesario. Desde que cada Pod tiene una
IP unica, las aplicaciones no deberian conocer dichas IPs para poder conectarse
a los Pods, porque estos puede "morir".&lt;/p&gt;
&lt;p&gt;Los servicios en kubernetes proveen una abstraccion que permite establecer
politicas de acceso sobre un conjunto lógico de Pods.&lt;/p&gt;
&lt;p&gt;Los servicios permiten que a los pods se les adjunten labels, con diferentes
objetivos (taggear versiones, separar versiones para test, debug y produccion).&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Listar servicios expuestos:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get services
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Exponer un servicio:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nx"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;expose&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;deployment&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;kubernetes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;bootcamp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"NodePort"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver detalles de servicios:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl describe services/kubernetes-bootcamp
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver que puerto fue abierto externamente:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kubernetes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bootcamp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{{(index .spec.ports 0).nodePort}}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una vez expuesto, se puede consultar el servicio directamente con:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;curl host01:$NODE_PORT
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Consultar los pods que estan etiquetados con un label particular:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get pods -l run=kubernetes-bootcamp
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El label en el caso anterior es &lt;code&gt;run=kubernetes-bootcamp&lt;/code&gt;. Funciona
identicamente para consultar servicios:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get services -l run=kubernetes-bootcamp
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Obtener el nombre del POD&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;POD_NAME&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pods&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'{{range .items}}{{.metadata.name}}{{"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;"}}{{end}}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pod&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;POD_NAME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aplicar un nuevo label a un Pod:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl label pod $POD_NAME app=v1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Consultar el label recien aplicado:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl describe pods $POD_NAME
kubectl get pods -l app=v1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Borrar un servicio:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl delete service -l run=kubernetes-bootcamp
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;5. Multiples instancias de una App&lt;/h3&gt;
&lt;p&gt;Escalar es incrementar el numero de instancias o pods para poder manejar
incrementos de trafico en la aplicación. Los services manejan el trafico hacia
los pods mendiante un load-balancer.&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Escalar (scale up) un deployment llamado kubernetes-bootcamp a 4 replicas:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl scale deployments/kubernetes-bootcamp --replicas=4
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver los deployments:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get deployments
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Controlar los pods (Tiene que haber 4):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get pods -o wide
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver el deployment de forma mas detallada:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl describe deployments/kubernetes-bootcamp
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver el servicio:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl describe services/kubernetes-bootcamp
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Recuperar el nodo:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kubernetes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bootcamp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{{(index .spec.ports 0).nodePort}}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ejecutar varias veces:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;curl host01:$NODE_PORT
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Deberian responder diferentes pods de la misma app.&lt;/p&gt;
&lt;p&gt;Ejecutar ahora solo 2 replicas (Scale down):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl scale deployments/kubernetes-bootcamp --replicas=2
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Confirmar el cambio:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get deployments
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;6. Realizando actualizaciones progresivas&lt;/h3&gt;
&lt;p&gt;La idea es lograr actualizaciones sin que se experimente una caida del servicio,
esto permite poder actualizar las aplicaciones de forma mas seguida.&lt;/p&gt;
&lt;p&gt;Kubernetes permite esto mediante las Rolling Updates. Esto permite actualizar
sin tener downtimes y ademas puede ser revertido en caso de problemas
(rollbacks).&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Ver imagen actual de los pods (Campo image):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl describe pods
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Actualizar la image:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v2
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver información de los Pods:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get pods
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No actualiza los viejos pods, sino que termina los anteirores y crea pods
nuevos.&lt;/p&gt;
&lt;p&gt;Verificar que la app actualizo:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kubernetes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bootcamp&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kubernetes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bootcamp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{{(index .spec.ports 0).nodePort}}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;
&lt;span class="n"&gt;curl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;host01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;NODE_PORT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tambien puede verificarse el exito mediante:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl rollout status deployments/kubernetes-bootcamp
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Deployar una version "con errores":&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v10
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ver problemas:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl get deployments
kubectl get pods
kubectl describe pods
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Rollback:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl rollout undo deployments/kubernetes-bootcamp
kubectl get pods
kubectl describe pods
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Dudas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;¿Un cluster kubernetes sirve para deploy de una app unica o muchas apps
 pueden convivir en el?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se pueden hacer deploys de varias apps y se iran acomodando en los recursos que
el cluster tenga disponibles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;¿Un Pod es equivalente a un container?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Un pod es un container de una aplicación en particular gestionado por kubernetes&lt;/p&gt;
&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Al querer ejecutar &lt;code&gt;minikube start&lt;/code&gt; se obtiene el error "Error starting host: Error getting state for host: machine does not exist".&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El error completo es:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$&lt;span class="w"&gt; &lt;/span&gt;minikube&lt;span class="w"&gt; &lt;/span&gt;start
Starting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Kubernetes&lt;span class="w"&gt; &lt;/span&gt;v1.9.0&lt;span class="w"&gt; &lt;/span&gt;cluster...
Starting&lt;span class="w"&gt; &lt;/span&gt;VM...
E0428&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:06:43.557255&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;18070&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;start.go:159&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Error&lt;span class="w"&gt; &lt;/span&gt;starting&lt;span class="w"&gt; &lt;/span&gt;host:&lt;span class="w"&gt; &lt;/span&gt;Error&lt;span class="w"&gt; &lt;/span&gt;getting&lt;span class="w"&gt; &lt;/span&gt;state&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;host:&lt;span class="w"&gt; &lt;/span&gt;machine&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;exist.

&lt;span class="w"&gt; &lt;/span&gt;Retrying.
E0428&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:06:43.557517&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;18070&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;start.go:165&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Error&lt;span class="w"&gt; &lt;/span&gt;starting&lt;span class="w"&gt; &lt;/span&gt;host:&lt;span class="w"&gt;  &lt;/span&gt;Error&lt;span class="w"&gt; &lt;/span&gt;getting&lt;span class="w"&gt; &lt;/span&gt;state&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;host:&lt;span class="w"&gt; &lt;/span&gt;machine&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;exist&lt;/span&gt;
&lt;span class="o"&gt;================================================================================&lt;/span&gt;
An&lt;span class="w"&gt; &lt;/span&gt;error&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;occurred.&lt;span class="w"&gt; &lt;/span&gt;Would&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;like&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;opt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;anonymized&lt;span class="w"&gt; &lt;/span&gt;crash
information&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;minikube&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;prevent&lt;span class="w"&gt; &lt;/span&gt;future&lt;span class="w"&gt; &lt;/span&gt;errors?
To&lt;span class="w"&gt; &lt;/span&gt;opt&lt;span class="w"&gt; &lt;/span&gt;out&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;these&lt;span class="w"&gt; &lt;/span&gt;messages,&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;command:
&lt;span class="w"&gt;        &lt;/span&gt;minikube&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;WantReportErrorPrompt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="o"&gt;================================================================================&lt;/span&gt;
Please&lt;span class="w"&gt; &lt;/span&gt;enter&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;response&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;n
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto me pasó a mi por borrar en algun momento la vm de Virtualbox que crea minikube. La forma mas facil de recuperarse de este error es:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$&lt;span class="w"&gt; &lt;/span&gt;minikube&lt;span class="w"&gt; &lt;/span&gt;delete
$&lt;span class="w"&gt; &lt;/span&gt;minikube&lt;span class="w"&gt; &lt;/span&gt;start
&lt;/pre&gt;&lt;/div&gt;</description><category>cluster</category><category>containers</category><category>deploy</category><category>devops</category><category>kubernetes</category><category>orchestration</category><guid>http://tomasdelvechio.github.io/blog/algunas-notas-sobre-kubernetes/</guid><pubDate>Fri, 26 Jan 2018 03:18:56 GMT</pubDate></item></channel></rss>