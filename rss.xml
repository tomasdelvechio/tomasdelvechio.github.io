<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tomás Delvechio</title><link>http://tomasdelvechio.github.io/</link><description>Sitio Academico de Tomas Delvechio</description><atom:link href="http://tomasdelvechio.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2020 &lt;a href="mailto:tdelvechio@unlu.edu.ar"&gt;Tomás Delvechio&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Tue, 10 Nov 2020 16:57:25 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Poniendose al Dia con PHP 8</title><link>http://tomasdelvechio.github.io/blog/poniendose-al-dia-con-php-8/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;Soy programador de PHP desde los infames tiempos (?) de PHP 5. Mucha agua corrió bajo el punte y así como PHP 7 supuso un gran avance en varios aspectos, estamos en la previa del lanzamiento de la nueva gran versión, que será PHP 8. Cuando escribo esto (noviembre de 2020), &lt;a href="https://www.php.net/archive/2020.php#2020-10-29-2"&gt;tenemos la RC3 salida hace un par de días&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Vengo siguiendo la evolución de esta versión de forma superficial pero continuada. Si bien la discusión detallada se puede seguir &lt;a href="https://wiki.php.net/rfc"&gt;en el propio sitio a través de sus RFC&lt;/a&gt;, es cierto que eso a veces puede ser medio pesado por el nivel de detalles.&lt;/p&gt;
&lt;p&gt;Por eso vengo siguiendo varios posts que les comparto, para ponerse al día medio rápido en lo que nos ofrece esta nueva versión.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El blog de &lt;a href="https://stitcher.io/"&gt;Stitcher.io&lt;/a&gt; es uno de los mas activos en términos de estar al día con las novedades. En particular &lt;a href="https://stitcher.io/blog/new-in-php-8"&gt;este post&lt;/a&gt; lista la mayoría de nuevas características (sobre todo en sintaxis).&lt;/li&gt;
&lt;li&gt;Acá les dejo algunos post mas del mismo blog. &lt;a href="https://stitcher.io/blog/php-8-before-and-after"&gt;[1]&lt;/a&gt; &lt;a href="https://stitcher.io/blog/php-8-in-8-code-blocks"&gt;[2]&lt;/a&gt; &lt;a href="https://stitcher.io/blog/php-in-2020"&gt;[3]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pociot.dev/32-php-8-try-out-all-new-features"&gt;Este otro post&lt;/a&gt; esta muy bueno, con 32 ejemplos para probarlos desde el mismo navegador.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.exakat.io/en/common-php-8-0-compilation-error-messages/"&gt;Este ultimo&lt;/a&gt; me pareció piola de cara a los que laburamos hace tiempo con PHP, y es un conjunto de errores comunes que nos podemos encontrar ya si ejecutamos código actual con la nueva versión.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La idea era compartirles esta serie de links. &lt;/p&gt;
&lt;p&gt;Hasta la próxima.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Voy a ir agregando acá nuevos posts que vaya encontrando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Algunas notas sobre &lt;a href="https://platform.sh/blog/2020/php-80-feature-focus-weak-maps/"&gt;Weak Maps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>php</category><category>php8</category><guid>http://tomasdelvechio.github.io/blog/poniendose-al-dia-con-php-8/</guid><pubDate>Thu, 05 Nov 2020 01:43:04 GMT</pubDate></item><item><title>Screencasts en Gnome 3</title><link>http://tomasdelvechio.github.io/blog/screencasts-en-gnome-3/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;Estoy preparando una charla que voy a dar en un par de semanas. Como material de la misma voy a integrar algunos videos de ejemplos, para no tener que ejecutarlos en vivo (porque a veces pueden fallar, roba tiempo de la charla, que la idea es que sea fluida, etc...)&lt;/p&gt;
&lt;p&gt;Cuestión que, al no estar subido a la moda de ser Youtuber ni Streamer ni similar, no manejo el set de software estándar (Si, ya se, OBS + algún que otro editor onda Kdenlive). Esta bueno eso, pero a veces puede sonar a demasiado.&lt;/p&gt;
&lt;p&gt;Soy usuario de Ubuntu + Gnome 3 desde hace años, y en algún momento me había cruzado con un atajo de teclado para activar una grabación del escritorio. Lo olvidé, pero en Reddit &lt;a href="https://www.reddit.com/r/gnome/comments/hpxzfg/til_you_can_use_shiftctrlaltr_to_record_a_video/"&gt;hoy me volvi a cruzar con eso&lt;/a&gt;, y recordé lo simple que era para evitar OBS (que de nuevo, esta muy bien, pero puede ser demasiado).&lt;/p&gt;
&lt;p&gt;Lo estuve probando, y si bien no se si es lo que voy a usar definitivo, si esta bueno tener "a mano", saber que existe y como usarlo.&lt;/p&gt;
&lt;h3&gt;Screencast en Gnome 3&lt;/h3&gt;
&lt;p&gt;Antes yo lo conocía como Screencast, hoy son Vlogs o directamente un canal de Youtube. La idea es clips de videos que muestren como hacer algo "técnico", una solución a algo o documentar la forma de arreglar un problema.&lt;/p&gt;
&lt;p&gt;Gnome 3 tiene la funcionalidad nativa de hacer Screencast casi &lt;a href="https://help.gnome.org/users/gnome-help/stable/screen-shot-record.html#screencast"&gt;desde que salió&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para activarla, basta ejecutar &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;R&lt;/code&gt;. Eso hace que en el panel de arriba a la derecha aparezca un icono "rojo".&lt;/p&gt;
&lt;blockquote class="imgur-embed-pub" lang="en" data-id="yf5BVor" data-context="false"&gt;&lt;a href="//imgur.com/yf5BVor"&gt;TIL you can use Shift+Ctrl+Alt+R to record a video of the screen.&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//s.imgur.com/min/embed.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;source: &lt;a href="https://imgur.com/yf5BVor"&gt;https://imgur.com/yf5BVor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ellos dicen que lo integraron por propósitos de depuración. Con lo cual, las configuraciones por defecto son bastante pobres. Por ejemplo, el máximo de grabación por defecto son 30 segundos.&lt;/p&gt;
&lt;p&gt;Como todo desde que encararon esa filosofía del nuevo escritorio, lo dejaron ahí, muy poco documentado, y se olvidaron. No se si se olvidaron, pero cuando un usuario les pide que le agreguen "opciones" la respuesta es "esta ahí, que alguien haga una extensión". Que se yo, cada uno maneja sus comunidades como quiere, y a Gnome la verdad que le va bastante bien. Pero es una respuesta medio chocante para mi.&lt;/p&gt;
&lt;h3&gt;EasyScreenCast&lt;/h3&gt;
&lt;p&gt;En fin, cuestión que alguien si le hizo caso al comentario y por eso existe la extensión &lt;a href="https://extensions.gnome.org/extension/690/easyscreencast/"&gt;EasyScreenCast&lt;/a&gt;. La use un rato, anda joya, y tiene muchas opciones para configurar.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://extensions.gnome.org/extension-data/screenshots/screenshot_690_GFOsR6g.png"&gt;&lt;/p&gt;
&lt;p&gt;En particular tuve unos problemas a la hora de grabar algo que no sea todo el escritorio (tengo dos monitores entonces es incomodo para usarlo). Pero rompía el escritorio (era necesario reiniciarlo) así que por el momento, no se si es lo que voy a usar. Capaz me pongo a hacer debug, pero por ahora es algo que tira para atrás el uso. Mi hipótesis es que al tener un Ubuntu viejo (18.04) la versión de Gnome con el plugin no están congeniando del todo bien.&lt;/p&gt;
&lt;p&gt;En caso de encontrarle la vuelta, actualizo el post.&lt;/p&gt;&lt;/div&gt;</description><guid>http://tomasdelvechio.github.io/blog/screencasts-en-gnome-3/</guid><pubDate>Sun, 12 Jul 2020 19:59:48 GMT</pubDate></item><item><title>Borrando Cosas Inutiles de Ubuntu (Versión 2020)</title><link>http://tomasdelvechio.github.io/blog/borrando-cosas-inutiles-de-ubuntu-version-2020/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;h3&gt;Introducción&lt;/h3&gt;
&lt;p&gt;Nunca esta demás saber que cosas borrar para mantener el disco raíz lo mas libre posible. Hoy me encontré con el Disco raíz con un 86% de ocupación y me dispuse a buscar cosas para borrar.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
...
/dev/sda1        38G   31G  &lt;span class="m"&gt;5&lt;/span&gt;,0G  &lt;span class="m"&gt;86&lt;/span&gt;% /
...
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Herramienta de diagnostico&lt;/h3&gt;
&lt;p&gt;Ok, que hacer? En primer lugar, un diagnostico. La primer mano nos la puede dar la aplicación &lt;code&gt;baobab&lt;/code&gt;, que si mal no recuerdo siempre esta instalada (si tenes el escritorio por defecto de Ubuntu).&lt;/p&gt;
&lt;p&gt;Se busca desde el launcher con ese nombre o "Analizador de Uso de Disco". Muestra las diferentes particiones y gráficos de forma cómoda directorios y sub-directorios:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Baobab Screenshoot" src="http://tomasdelvechio.github.io/img/blog/2020/baobab-screenshot.png"&gt;&lt;/p&gt;
&lt;h3&gt;Replicas de paquetes de Snap&lt;/h3&gt;
&lt;p&gt;Ya usando &lt;code&gt;baobab&lt;/code&gt; investigo y encuentro que uno de los directorios que mas archivo tiene es &lt;code&gt;/var/lib/snapd/snaps&lt;/code&gt;. Ahi me encuentro con lo siguiente:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ls -la /var/lib/snapd/snaps
total &lt;span class="m"&gt;6180056&lt;/span&gt;
drwxr-xr-x  &lt;span class="m"&gt;3&lt;/span&gt; root root      &lt;span class="m"&gt;4096&lt;/span&gt; jul  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:40 .
drwxr-xr-x &lt;span class="m"&gt;21&lt;/span&gt; root root      &lt;span class="m"&gt;4096&lt;/span&gt; jul  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:55 ..
-rw-------  &lt;span class="m"&gt;2&lt;/span&gt; root root  &lt;span class="m"&gt;57266176&lt;/span&gt; jun &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;:12 bitwarden_25.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;57257984&lt;/span&gt; jun &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;:35 bitwarden_26.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;57614336&lt;/span&gt; mar &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:43 core18_1705.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;57618432&lt;/span&gt; abr &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt;:28 core18_1754.snap
-rw-------  &lt;span class="m"&gt;2&lt;/span&gt; root root  &lt;span class="m"&gt;63942656&lt;/span&gt; jun &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;:05 core20_634.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;101724160&lt;/span&gt; jun  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:18 core_9289.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;101191680&lt;/span&gt; jun &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:07 core_9436.snap
-rw-------  &lt;span class="m"&gt;2&lt;/span&gt; root root  &lt;span class="m"&gt;61710336&lt;/span&gt; feb &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="m"&gt;02&lt;/span&gt;:55 discord_108.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;60096512&lt;/span&gt; mar &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;:54 discord_109.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;93212672&lt;/span&gt; jun &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:27 drawio_37.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;93224960&lt;/span&gt; jun &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;:35 drawio_38.snap
-rw-------  &lt;span class="m"&gt;2&lt;/span&gt; root root &lt;span class="m"&gt;193806336&lt;/span&gt; may &lt;span class="m"&gt;14&lt;/span&gt;  &lt;span class="m"&gt;2019&lt;/span&gt; eclipse_40.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;220319744&lt;/span&gt; mar &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="m"&gt;07&lt;/span&gt;:39 eclipse_48.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;208605184&lt;/span&gt; mar &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:01 gitkraken_153.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;208609280&lt;/span&gt; abr &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:45 gitkraken_154.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;147488768&lt;/span&gt; may &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;:22 gnome-3-26-1604_100.snap
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;147501056&lt;/span&gt; nov &lt;span class="m"&gt;17&lt;/span&gt;  &lt;span class="m"&gt;2019&lt;/span&gt; gnome-3-26-1604_98.snap
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Las apps están descargadas y "backupeadas" por las dudas.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://snapcraft.io/"&gt;Snap&lt;/a&gt; es una manera de instalar apps en Linux, fuertemente impulsada por Canonical. A veces es cómoda para instalar apps que no están en los repos clásicos o están en una versión desactualizada (via Apt).&lt;/p&gt;
&lt;p&gt;Buscando un poco, se llega al siguiente comando:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ snap list --all
Name                     Version                     Rev   Tracking          Publisher         Notes                                                           
bitwarden                &lt;span class="m"&gt;1&lt;/span&gt;.18.0                      &lt;span class="m"&gt;25&lt;/span&gt;    latest/stable     bitwarden✓        disabled                                                        
bitwarden                &lt;span class="m"&gt;1&lt;/span&gt;.19.0                      &lt;span class="m"&gt;26&lt;/span&gt;    latest/stable     bitwarden✓        -                                                               
core                     &lt;span class="m"&gt;16&lt;/span&gt;-2.45.1                   &lt;span class="m"&gt;9436&lt;/span&gt;  latest/stable     canonical✓        core                                                            
core                     &lt;span class="m"&gt;16&lt;/span&gt;-2.45                     &lt;span class="m"&gt;9289&lt;/span&gt;  latest/stable     canonical✓        core,disabled                                                   
core18                   &lt;span class="m"&gt;20200311&lt;/span&gt;                    &lt;span class="m"&gt;1705&lt;/span&gt;  latest/stable     canonical✓        base,disabled                                                   
core18                   &lt;span class="m"&gt;20200427&lt;/span&gt;                    &lt;span class="m"&gt;1754&lt;/span&gt;  latest/stable     canonical✓        base                                                            
core20                   &lt;span class="m"&gt;20&lt;/span&gt;                          &lt;span class="m"&gt;634&lt;/span&gt;   latest/stable     canonical✓        base                                                            
discord                  &lt;span class="m"&gt;0&lt;/span&gt;.0.10                      &lt;span class="m"&gt;108&lt;/span&gt;   latest/stable     snapcrafters      disabled                                                        
discord                  &lt;span class="m"&gt;0&lt;/span&gt;.0.10                      &lt;span class="m"&gt;109&lt;/span&gt;   latest/stable     snapcrafters      -                                                               
drawio                   &lt;span class="m"&gt;13&lt;/span&gt;.3.1                      &lt;span class="m"&gt;37&lt;/span&gt;    latest/stable     jgraph✓           disabled                                                        
drawio                   &lt;span class="m"&gt;13&lt;/span&gt;.3.5                      &lt;span class="m"&gt;38&lt;/span&gt;    latest/stable     jgraph✓           -                                                               
eclipse                  &lt;span class="m"&gt;2019&lt;/span&gt;-03                     &lt;span class="m"&gt;40&lt;/span&gt;    latest/stable     snapcrafters      disabled,classic
eclipse                  &lt;span class="m"&gt;2019&lt;/span&gt;-12                     &lt;span class="m"&gt;48&lt;/span&gt;    latest/stable     snapcrafters      classic
gitkraken                &lt;span class="m"&gt;6&lt;/span&gt;.6.0                       &lt;span class="m"&gt;154&lt;/span&gt;   latest/stable     gitkraken✓        -
gitkraken                &lt;span class="m"&gt;6&lt;/span&gt;.5.4                       &lt;span class="m"&gt;153&lt;/span&gt;   latest/stable     gitkraken✓        disabled
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Si en la salida anterior se observa la ultima columna (Notes), se observa que hay muchas versiones en estado &lt;code&gt;disabled&lt;/code&gt;. Así que en teoría se pueden borrar. El script que &lt;a href="https://superuser.com/a/1330590/341719"&gt;se encuentra aca&lt;/a&gt; a mi me funciono joya (ojo que avisan que según el idioma del sistema por ahí lo tienen que tocar).&lt;/p&gt;
&lt;p&gt;Dejo una versión del script acá:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# Removes old revisions of snaps&lt;/span&gt;
&lt;span class="c1"&gt;# CLOSE ALL SNAPS BEFORE RUNNING THIS&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -eu

&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C snap list --all &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;'/disabled/{print $1, $3}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; snapname revision&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        sudo snap remove &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$snapname&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; --revision&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$revision&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;También es una buena idea revisar programas ahí instalados y que no estés usando, y eliminarlos, por ejemplo, en mi caso había un par que no estaba usando y los elimine:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo snap remove krita gitkraken eclipse drawio bitwarden youtube-dl
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Para este punto, y solo preocupándome por Snap, la situación estaba así:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
...
/dev/sda1        38G   27G  &lt;span class="m"&gt;8&lt;/span&gt;,5G  &lt;span class="m"&gt;77&lt;/span&gt;% /
...
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Recupere alrededor de 3.5 Gb.&lt;/p&gt;
&lt;h3&gt;Logs is everywhere&lt;/h3&gt;
&lt;p&gt;El siguiente directorio que tenia bastante peso era el de logs. 4Gb de logs!!!!!&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ journalctl --disk-usage
Archived and active journals take up &lt;span class="m"&gt;3&lt;/span&gt;.7G in the file system.
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;El directorio principal de logs en un Ubuntu es &lt;code&gt;/var/log&lt;/code&gt;, y dentro de dicho directorio, el journal (el log principal del sistema) era el que mas pesaba (casi el total). Ahí veo 2 problemas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mala política de borrado de logs&lt;/li&gt;
&lt;li&gt;Porque se están llenando tanto?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lo segundo es para pensarlo un poco e investigar, para el objetivo del post me voy a centrar en el primero punto.&lt;/p&gt;
&lt;h4&gt;Política de borrado&lt;/h4&gt;
&lt;p&gt;La rotación de logs es una tarea automática que hace el sistema. Básicamente va creando archivos nuevos para loguear los eventos mas actuales, y deja como históricos los viejos archivos. Para consultar estos registros, se puede usar el comando &lt;code&gt;journalctl&lt;/code&gt;. No me voy a detener en este comando que daría para un post entero. Solo decir que una primer configuración a editar es el tamaño del log del sistema. Esto se hace desde &lt;code&gt;/etc/systemd/journald.conf&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Como root, editar ese archivo, cambiando la linea:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#SystemMaxUse=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;por&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;SystemMaxUse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;100M&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Donde el valor después del signo igual, debería ser el tamaño que queremos que ocupe. En este caso,  100 Megas me parece un valor mas que razonable.&lt;/p&gt;
&lt;p&gt;Para terminar de aplicar el cambio, hay que reiniciar el servicio:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo systemctl restart systemd-journald.service
$ journalctl --disk-usage
Archived and active journals take up &lt;span class="m"&gt;104&lt;/span&gt;.0M in the file system.
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Perfecto. Si volvemos a mirar el espacio en disco:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
...
/dev/sda1        38G   24G   13G  &lt;span class="m"&gt;66&lt;/span&gt;% /
...
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Perfecto. ¿Con que seguir?&lt;/p&gt;
&lt;h3&gt;Cache de APT y Librerías sin uso&lt;/h3&gt;
&lt;p&gt;APT es la herramienta para gestión de paquetes de Ubuntu. Es típico que en el uso, genere una cache importante, y que en muchos casos queden librerías que ya no se utilizan y pueden borrarse. En mi caso no va a aportar demasiado porque estos comandos los suelo ejecutar con cierta regularidad, pero hay 3 parámetros que son muy útiles y es aconsejable ejecutarlos con cierta regularidad:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo apt clean
$ sudo apt autoclean
$ sudo apt autoremove
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;En el ultimo caso, puede querer eliminar paquetes y nos va a preguntar si estamos seguros. En general, no es problemático eliminarlos (aunque si no se esta seguro, ese ultimo comando podría no ejecutarse).&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
...
/dev/sda1        38G   23G   13G  &lt;span class="m"&gt;65&lt;/span&gt;% /
...
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;En mi caso no ayudó mucho, pero puede ser útil este paso.&lt;/p&gt;
&lt;h3&gt;Directorio /usr&lt;/h3&gt;
&lt;p&gt;Si no esta pasando nada raro, y excluyendo el &lt;code&gt;/home&lt;/code&gt;, el directorio &lt;code&gt;/usr&lt;/code&gt; debería ser uno de los directorios con mas "peso" en el gráfico de &lt;code&gt;Baobab&lt;/code&gt;. Es normal y esperable, ya que todas las aplicaciones y librerías del sistema se encuentra allí.&lt;/p&gt;
&lt;p&gt;En general no es aconsejable tocar ningún archivo de allí. En caso de tener alguna anomalía, es probable que pueda limpiarse eliminando el paquete o programa que la esta causando, pero no se aconseja eliminar archivos o sub directorios de forma directa en este caso.&lt;/p&gt;
&lt;h3&gt;BleachBit&lt;/h3&gt;
&lt;p&gt;Para terminar el post, es interesante mencionar esta GUI, llamada &lt;a href="https://www.bleachbit.org/"&gt;BleachBit&lt;/a&gt;, que es lo mas parecido a CCleaner que tenemos los usuarios de Linux.&lt;/p&gt;
&lt;p&gt;Tiene una forma de eliminar cosas del sistema (usar con cuidado) pero al estar centrado en el usuario,  nos haría ganar espacio en el &lt;code&gt;/home&lt;/code&gt;. En caso de necesitarlo, es una buena opción.&lt;/p&gt;
&lt;p&gt;Luego de borrar algunas cosas, la cantidad de disco ocupada finalmente fue la siguiente:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
...
/dev/sda1        38G   23G   13G  &lt;span class="m"&gt;64&lt;/span&gt;% /
...
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Para mi suficiente, y no me llevo mucho tiempo. Espero que algo de esto les sirva.&lt;/p&gt;&lt;/div&gt;</description><category>disk usage</category><category>free space</category><guid>http://tomasdelvechio.github.io/blog/borrando-cosas-inutiles-de-ubuntu-version-2020/</guid><pubDate>Fri, 03 Jul 2020 21:45:32 GMT</pubDate></item><item><title>Volumenes de Docker y Discos USB Externos</title><link>http://tomasdelvechio.github.io/blog/volumenes-de-docker-y-discos-usb-externos/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;Estoy levantando un media server en mi maquina, y aprovecho que hay mucho despliegue usando contenedores Docker.&lt;/p&gt;
&lt;h3&gt;El Problema&lt;/h3&gt;
&lt;p&gt;Como tengo todo mi contenido multimedia en un disco USB externo, aproveche y le vincule los volumenes al contenedor directamente a los paths del disco.&lt;/p&gt;
&lt;p&gt;Entonces, los volumenes quedaban mas o menos como sigue. Uso la notación que pone Ubuntu al montar los discos externos:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/media/tomas/Elements/series:/series
/media/tomas/Elements/peliculas:/peliculas
....
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;De lado derecho es el path del directorio en el host. Del lado izquierdo es el directorio dentro del contenedor.&lt;/p&gt;
&lt;p&gt;Como esto se hace en un equipo particular, eventualmente se reinicia (o se apaga y prende). Esto me genero 1 gran problema.&lt;/p&gt;
&lt;p&gt;El servicio de Docker inicia durante el proceso de boot del equipo. Sin embargo, Ubuntu monta el disco al momento en el que el usuario inicia sesión.&lt;/p&gt;
&lt;p&gt;Esto genera que Docker intente buscar los directorios de los volumenes en el Host, y al no encontrarlos, los crea. Este comportamiento se conoce como propagación y esta documentado&lt;a href="https://docs.docker.com/storage/#tips-for-using-bind-mounts-or-volumes"&gt;1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo, sucedia que al iniciar sesión, Ubuntu intentaba montar en el directorio &lt;code&gt;/media/tomas/Elements&lt;/code&gt;, pero debido a que este ya existia (dado que Docker lo creaba por el mecanismo de propagación), Ubuntu monta el disco en &lt;code&gt;/media/tomas/Elements1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El efecto de esto es que perdia acceso a los directorios dentro del contenedor.&lt;/p&gt;
&lt;h3&gt;La idea de solución&lt;/h3&gt;
&lt;p&gt;Buscando ayuda, lo que me sugieren y que es la solución es cambiar el orden del booteo, para que Docker inicie despues del proceso de mount. Esto no es tan facil como puede parecer. Requiere:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buscar la unit del servicio de mount&lt;/li&gt;
&lt;li&gt;Buscar la unit de systemd del servicio de Docker&lt;/li&gt;
&lt;li&gt;Agregar el servicio de mount como dependencia de Docker&lt;/li&gt;
&lt;li&gt;Hacer que el mount del disco se haga al inicio y no al iniciar sesion&lt;/li&gt;
&lt;li&gt;Probarlo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A esa secuencia de pasos llegue luego de un poco de prueba y error.&lt;/p&gt;
&lt;p&gt;A continuación documentaré los pasos que tuve que hacer&lt;/p&gt;
&lt;h3&gt;La solución&lt;/h3&gt;
&lt;p&gt;Aclaración del setup de mi equipo: Tengo una notebook corriendo Ubuntu 18.04, que ejecuta Systemd para gestionar el proceso de arranque del Sistema Operativo. Desconozco si en otras distros esto puede variar.&lt;/p&gt;
&lt;h4&gt;Nombre del servicio de mount en Systemd&lt;/h4&gt;
&lt;p&gt;Despues de buscar un rato, descubrí que el servicio que maneja el mount al inicio del sistema se llama &lt;code&gt;udisks2.service&lt;/code&gt;. Una forma de ver los servicios en systemd es:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl --type&lt;span class="o"&gt;=&lt;/span&gt;service
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;Agregar dependencia de este servicio al inicio de Docker&lt;/h4&gt;
&lt;p&gt;En este paso, necesitamos que docker no arranque hasta que se termine el proceso &lt;code&gt;udisks2.service&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En mi caso, la configuración de Systemd de Docker esta en &lt;code&gt;/lib/systemd/system/docker.service&lt;/code&gt; (que tiene ademas un link simbolico en &lt;code&gt;/etc/systemd/system/multi-user.target.wants/docker.service&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Alli dentro, busque la linea que contiene lo siguiente&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network-online.target firewalld.service containerd.service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Y agregue al final de la misma (con separación de un espacio)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network-online.target firewalld.service containerd.service udisks2.service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Luego guarde y cerre el archivo.&lt;/p&gt;
&lt;p&gt;Para que systemd tome este cambio, tuve que ejecutar:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;Montar el disco al inicio del sistema y no de la sesión&lt;/h4&gt;
&lt;p&gt;A continuación, tuve que configurar para que el disco se monte al inicio del sistema. Para ello, voy tomar el camino de hacerlo via interfaz gráfica y no por consola.&lt;/p&gt;
&lt;p&gt;Para ello, usé una app que se busca en Gnome como &lt;code&gt;Disks&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Disks Gnome App" src="http://tomasdelvechio.github.io/img/blog/2020/figure1.png" title="Disks Gnome App"&gt;&lt;/p&gt;
&lt;p&gt;Una vez allí, elegimos el disco en cuestion y entramos a sus "opciones de montaje":&lt;/p&gt;
&lt;p&gt;&lt;img alt="Select Disk Mount Options" src="http://tomasdelvechio.github.io/img/blog/2020/Selection_024.png" title="Select Disk Mount Options"&gt;&lt;/p&gt;
&lt;p&gt;En esta nueva pantalla, se indicaron las siguientes cosas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Que no se use las configuraciones por defecto para la sesión&lt;/li&gt;
&lt;li&gt;Que se monte al arranque del sistema&lt;/li&gt;
&lt;li&gt;Que se identifique con el UUID (Esta ultima es optativa, pero era la que me pareció que dejaba el nombre mas apropiado al directorio donde se iba a montar)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="Mount Options Window" src="http://tomasdelvechio.github.io/img/blog/2020/Selection_026.png" title="Mount Options Window"&gt;&lt;/p&gt;
&lt;h4&gt;Cambiar los paths en los volumenes&lt;/h4&gt;
&lt;p&gt;Una vez terminado esto, pude cambiar los paths de los volumenes del lado del host, dejandolos como sigue:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/mnt/9A567...0FD/series:/series
/mnt/9A567...0FD/peliculas:/peliculas
....
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Probé reiniciar y todo funciono perfecto.&lt;/p&gt;&lt;/div&gt;</description><category>deploy</category><category>docker</category><category>storage</category><guid>http://tomasdelvechio.github.io/blog/volumenes-de-docker-y-discos-usb-externos/</guid><pubDate>Tue, 23 Jun 2020 00:30:25 GMT</pubDate></item><item><title>Introducción a Spark</title><link>http://tomasdelvechio.github.io/blog/introduccion-a-spark/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;Apache Spark es un framework de procesamiento muy de moda en entornos de procesamiento para Big Data, IoT y Machine Learning.&lt;/p&gt;
&lt;h3&gt;Pipeline&lt;/h3&gt;
&lt;p&gt;El pipeline de trabajo en spark es conocido como &lt;strong&gt;DAG&lt;/strong&gt; (Directed Acyclic Graph) y se basa en armar un grafo de trabajo donde las tareas se sucedan unas a otras segun se establezca.&lt;/p&gt;
&lt;p&gt;Ademas, propone que muchas operaciones que en MapReduce involucran operaciones de entrada salida a disco, se hagan en memoria principal, lo que genera un rendimiento mayor comparado con su predecesor.&lt;/p&gt;
&lt;h3&gt;Lenguajes&lt;/h3&gt;
&lt;p&gt;Spark acepta Java, Scala, Python y R, aunque no todos estan soportados de la misma forma y de manera completa.&lt;/p&gt;
&lt;h3&gt;Otras herramientas&lt;/h3&gt;
&lt;p&gt;Spark ofrece ademas una consola interactiva para Scala, Python y R con capacidades &lt;strong&gt;REPL&lt;/strong&gt; (Read, Evaluate, Print y Loop).&lt;/p&gt;
&lt;p&gt;Ademas del core, Spark ofrece algunas librerias para tareas comunes en el ambito de big data: &lt;em&gt;SparkSQL&lt;/em&gt;, &lt;em&gt;Spark Streaming&lt;/em&gt;, &lt;em&gt;Spark MLlib&lt;/em&gt; y &lt;em&gt;Spark GraphX&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Es posible vincular Spark a una Notebook de Jupyter y trabajar desde la interfaz de esta herramienta para hacer pruebas. (TODO: Agregar link a la notebook).&lt;/p&gt;
&lt;h3&gt;Arquitectura&lt;/h3&gt;
&lt;p&gt;Una aplicación Spark consta de un master, que dependiendo de la plataforma puede ser &lt;em&gt;Spark Master&lt;/em&gt; (standalone) &lt;em&gt;Mesos Master&lt;/em&gt; (Apache Mesos) o &lt;em&gt;ResourceManager&lt;/em&gt; (Apache Hadoop - YARN). Luego un proceso driver que se conoce como SparkContext y por ultimo de los workers.&lt;/p&gt;&lt;/div&gt;</description><category>big data</category><category>distributed systems</category><category>programming</category><category>spark</category><guid>http://tomasdelvechio.github.io/blog/introduccion-a-spark/</guid><pubDate>Sat, 08 Sep 2018 18:15:18 GMT</pubDate></item><item><title>Automatizando deploy con Helm</title><link>http://tomasdelvechio.github.io/blog/automatizando-deploy-con-helm/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;h2&gt;Automatizando Deploy con Helm&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Tener un cluster kubernetes andando y corriendo (por ejemplo minikube)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ minikube start
&lt;/code&gt;&lt;/pre&gt;


&lt;ol&gt;
&lt;li&gt;Instalar Helm y Tiller&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tiller es un servidor in cluster de helm (Se instala en el cluster). Para mas detalle, ver la &lt;a href="https://docs.helm.sh/using_helm/#quickstart"&gt;doc oficial&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ helm init
Creating /home/tomas/.helm
Creating /home/tomas/.helm/repository
Creating /home/tomas/.helm/repository/cache
Creating /home/tomas/.helm/repository/local
Creating /home/tomas/.helm/plugins
Creating /home/tomas/.helm/starters
Creating /home/tomas/.helm/cache/archive
Creating /home/tomas/.helm/repository/repositories.yaml
Adding stable repo with URL: https://kubernetes-charts.storage.googleapis.com
Adding &lt;span class="nb"&gt;local&lt;/span&gt; repo with URL: http://127.0.0.1:8879/charts
&lt;span class="nv"&gt;$HELM_HOME&lt;/span&gt; has been configured at /home/tomas/.helm.

Tiller &lt;span class="o"&gt;(&lt;/span&gt;the Helm server-side component&lt;span class="o"&gt;)&lt;/span&gt; has been installed into your Kubernetes Cluster.

Please note: by default, Tiller is deployed with an insecure &lt;span class="s1"&gt;'allow unauthenticated users'&lt;/span&gt; policy.
For more information on securing your installation see: https://docs.helm.sh/using_helm/#securing-your-helm-installation
Happy Helming!
&lt;/code&gt;&lt;/pre&gt;


&lt;ol&gt;
&lt;li&gt;Actualizar Respositorio de Charts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Los programas que se instalan via Helm se llaman Charts. Antes de instalar un chart, se debe actualizar la lista de charts disponibles&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;helm repo update
Hang tight &lt;span class="k"&gt;while&lt;/span&gt; we grab the latest from your chart repositories...
...Skip &lt;span class="nb"&gt;local&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span class="s2"&gt;"stable"&lt;/span&gt; chart repository
Update Complete. ⎈ Happy Helming!⎈
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><guid>http://tomasdelvechio.github.io/blog/automatizando-deploy-con-helm/</guid><pubDate>Sat, 28 Apr 2018 19:22:28 GMT</pubDate></item><item><title>Curso de Git</title><link>http://tomasdelvechio.github.io/blog/curso-de-git/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;El sabado 07 de Abril de 2018 estuvimos haciendo un taller de GIT en la UNLu. &lt;/p&gt;
&lt;p&gt;Fue una experiencia muy interesante. Esperabamos muy poca gente y sin embargo el aula se lleno durante las 3 horas y media que duró el taller. Para algunos usar Git es algo tan omnipresente, que a veces cometemos el error de creer que &lt;em&gt;es facil&lt;/em&gt; o que &lt;em&gt;todos lo usan&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Durante mas de 3 horas, 38 personas con conocimientos muy diverso respecto a computación estuvieron aprendiendo como usar Git, surgieron dudas muy interesantes y creo que todos nos llevamos algo nuevo.&lt;/p&gt;
&lt;p&gt;El material que se utilizó esta &lt;a href="https://docs.google.com/presentation/d/1LAns3-PGIOVf2KiMyw1sS4Uy7LaGV-bUPlJDQ22gDrc/edit?usp=sharing"&gt;disponible aca&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>charlas</category><category>git</category><category>vcs</category><guid>http://tomasdelvechio.github.io/blog/curso-de-git/</guid><pubDate>Sat, 14 Apr 2018 15:09:54 GMT</pubDate></item><item><title>Kompose: Migrar tus archivos Docker Compose a Kubernetes</title><link>http://tomasdelvechio.github.io/blog/kompose-migrar-tus-archivos-docker-compose-a-kubernetes/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;En un &lt;a href="http://tomasdelvechio.github.io/blog/algunas-notas-sobre-kubernetes"&gt;post anterior&lt;/a&gt; desplegamos un
cluster de pruebas con contenedores usando &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt; y
&lt;a href="https://github.com/kubernetes/minikube"&gt;Minikube&lt;/a&gt;. Este esquema resulta util
cuando lo que se quiere es desplegar y escalar un contenedor.&lt;/p&gt;
&lt;p&gt;Sin embargo, muchas aplicaciones Docker comenzaron a orquestarse utilizando mas
de un contenedor para hacer funcionar la misma. Por ejemplo, un contenedor con
un web server, otro para la base de datos relacional, y un tercero para una base
nosql.&lt;/p&gt;
&lt;p&gt;Para este tipo de esquemas surgio docker-compose. Permitia de forma sencilla
administrar la configuracion varios contenedores en simultaneo cuya imagen
origen eran diferentes.&lt;/p&gt;
&lt;p&gt;Para lograr un comportamiento similar con Kubernetes, existe la herramienta
&lt;a href="http://kompose.io"&gt;Kompose&lt;/a&gt;. Kompose nos permite tomar el contenido de un
archivo docker-compose.yml y realizar las mismas acciones, pero utilizando
Kubernetes.&lt;/p&gt;
&lt;h3&gt;Uso basico&lt;/h3&gt;
&lt;p&gt;Como siempre, nos salteamos la parte de instalacion dado que es sencilla y se
encuentra documentada en la &lt;a href="http://kompose.io/installation/"&gt;pagina oficial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kompose es muy sencilla de utilizar. Puede hacer 2 tareas principales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tomar un archivo docker-compose.yml y convertirlo a archivos de configuracion
 de Kubernetes.&lt;/li&gt;
&lt;li&gt;Ejecutar el archivo docker-compose.yml directamente sin generar nuevos
 archivos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La forma mas sencilla de utilizar es la segunda, dado que contamos con un
proyecto con un archivo docker-compose.yml o en general conocemos ese formato
bastante. Entonces se ejecuta&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kompose up&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;y eso ya levanta con Kubernetes todos los contenedores indicados.&lt;/p&gt;
&lt;h3&gt;Troubleshooting&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;kompose&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt;

&lt;span class="n"&gt;WARN&lt;/span&gt; &lt;span class="n"&gt;Unsupported&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="k"&gt;level&lt;/span&gt; &lt;span class="n"&gt;volumes&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ignoring&lt;/span&gt; 
&lt;span class="n"&gt;WARN&lt;/span&gt; &lt;span class="n"&gt;Unsupported&lt;/span&gt; &lt;span class="n"&gt;depends_on&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ignoring&lt;/span&gt;        
&lt;span class="n"&gt;WARN&lt;/span&gt; &lt;span class="n"&gt;Volume&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;host&lt;/span&gt; &lt;span class="ss"&gt;"."&lt;/span&gt; &lt;span class="n"&gt;isn&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ignoring&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;host&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><category>cluster</category><category>containers</category><category>deploy</category><category>devops</category><category>kompose</category><category>kubernetes</category><category>orchestration</category><guid>http://tomasdelvechio.github.io/blog/kompose-migrar-tus-archivos-docker-compose-a-kubernetes/</guid><pubDate>Sun, 04 Feb 2018 19:28:51 GMT</pubDate></item><item><title>Configuración para Sublime Text 3</title><link>http://tomasdelvechio.github.io/blog/configuracion-para-sublime-text-3/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="Logo Sublime Text 3" src="http://tomasdelvechio.github.io/img/blog/2018/logo-sublime-text-3.png" title="Logo de Sublime Text 3"&gt;&lt;/p&gt;
&lt;p&gt;Soy usuario activo de Sublime Text 3. Para proyectos pequeños o creacion de
scripts, es el editor con el que me siento mas comodo trabajando.&lt;/p&gt;
&lt;p&gt;La configuración default que tiene visual tiene algunos problemas. Lo primero
que hago al instalar Sublime es editar un par de estas configuraciones, y dejo
aca el archivo de configuración tal como lo tengo actualmente&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;    "bold_folder_labels": true,&lt;/span&gt;
&lt;span class="err"&gt;    "caret_style": "phase",&lt;/span&gt;
&lt;span class="err"&gt;    "draw_white_space": "all",&lt;/span&gt;
&lt;span class="err"&gt;    "fade_fold_buttons": false,&lt;/span&gt;
&lt;span class="err"&gt;    "font_face": "Inconsolata",&lt;/span&gt;
&lt;span class="err"&gt;    "font_size": 12,&lt;/span&gt;
&lt;span class="err"&gt;    "highlight_line": true,&lt;/span&gt;
&lt;span class="err"&gt;    "highlight_modified_tabs": true,&lt;/span&gt;
&lt;span class="err"&gt;    "ignored_packages":&lt;/span&gt;
&lt;span class="err"&gt;    [&lt;/span&gt;
&lt;span class="err"&gt;        "Vintage"&lt;/span&gt;
&lt;span class="err"&gt;    ],&lt;/span&gt;
&lt;span class="err"&gt;    "line_padding_bottom": 5.5,&lt;/span&gt;
&lt;span class="err"&gt;    "line_padding_top": 5.5,&lt;/span&gt;
&lt;span class="err"&gt;    "rulers":&lt;/span&gt;
&lt;span class="err"&gt;    [&lt;/span&gt;
&lt;span class="err"&gt;        80,&lt;/span&gt;
&lt;span class="err"&gt;        120&lt;/span&gt;
&lt;span class="err"&gt;    ],&lt;/span&gt;
&lt;span class="err"&gt;    "tab_size": 4,&lt;/span&gt;
&lt;span class="err"&gt;    "trim_trailing_white_space_on_save": true&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;Sobre las fuentes&lt;/h4&gt;
&lt;p&gt;La configuración &lt;code&gt;font_face&lt;/code&gt; indica la fuente utilizada. Inconsolata no es una
fuente que venga instalada por default. Para instalarla en Ubuntu, por ejemplo:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sudo apt install fonts-inconsolata&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Plugines&lt;/h3&gt;
&lt;p&gt;Ademas de la configuración visual, Sublime tiene una amplia cantidad de plugins.&lt;/p&gt;
&lt;p&gt;Aca va un listado de los que actualmente estoy utilizando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All Autocomplete&lt;/li&gt;
&lt;li&gt;BracketHighlighter&lt;/li&gt;
&lt;li&gt;DocBlockr&lt;/li&gt;
&lt;li&gt;GitGutter&lt;/li&gt;
&lt;li&gt;Laravel Blade Highlighter&lt;/li&gt;
&lt;li&gt;PHP Companion&lt;/li&gt;
&lt;li&gt;SublimeCodeIntel&lt;/li&gt;
&lt;li&gt;SublimeLinter-php&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Temas&lt;/h3&gt;
&lt;p&gt;Existen muchisimos temas para Sublime. Puntualmente estoy en estos momentos
utilizando &lt;a href="https://github.com/kenwheeler/brogrammer-theme"&gt;Brogrammer&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>dev</category><category>programming</category><category>sublime</category><category>tools</category><guid>http://tomasdelvechio.github.io/blog/configuracion-para-sublime-text-3/</guid><pubDate>Sat, 03 Feb 2018 15:15:40 GMT</pubDate></item><item><title>Algunas notas sobre Kubernetes</title><link>http://tomasdelvechio.github.io/blog/algunas-notas-sobre-kubernetes/</link><dc:creator>Tomás Delvechio</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="Logo Kubernetes" src="http://tomasdelvechio.github.io/img/blog/2018/logo-kubernetes.png" title="Logo de Kubernetes"&gt;&lt;/p&gt;
&lt;p&gt;Sistema para orquestación de cluster. Esto no es un tutorial, son notas sueltas
(personales) tomadas del &lt;a href="https://kubernetes.io"&gt;tutorial oficial&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;1. Crear un cluster&lt;/h3&gt;
&lt;p&gt;Kubernetes coordina un cluster para trabajar como una unica unidad. Para ello,
las apps necesitan ser empaquetadas en forma de containers.&lt;/p&gt;
&lt;p&gt;2 Recursos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Master: Coordinación y gestión el cluster&lt;/li&gt;
&lt;li&gt;Nodes: Son los workers del cluster (puede ser vm o nodo físico)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cada nodo tiene un Kubelet, un agente que coordina el nodo y maneja la
comunicación con el Master.&lt;/p&gt;
&lt;p&gt;Cada nodo debe poder realizar operaciones de containers, usando Docker o rkt
(Debe tenerlo instalado).&lt;/p&gt;
&lt;p&gt;Para debug se recomienda utilizar &lt;a href="https://github.com/kubernetes/minikube"&gt;Minikube&lt;/a&gt;.
Instala un cluster y facilita la configuracion de kubernetes (Instalarlo a mano
era complejo).&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Testear la version de minikube&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;minikube version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Iniciar un cluster usando minikube&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;minikube start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Linea de comandos de Kubernetes: &lt;code&gt;kubectl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Version de kubectl (Para verificar que esta instalado):&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver información de cluster&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl cluster-info&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver nodos del cluster&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get nodes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;2. Crear deploys con kubectl&lt;/h3&gt;
&lt;p&gt;Una vez instalado Kubernetes, se deben crear aplicaciones en containers para ser
ejecutadas sobre el cluster. Para esto se definen instruccion que el master
ejecuta sobre los nodos.&lt;/p&gt;
&lt;p&gt;Kubernetes Deployment Controller monitoriza las instancias y si se caen, las
regenera nuevamente.&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Correr un ejemplo&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl run kubernetes-bootcamp \&lt;/span&gt;
&lt;span class="err"&gt;    --image=docker.io/jocatalin/kubernetes-bootcamp:v1 \&lt;/span&gt;
&lt;span class="err"&gt;    --port=8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver la app en ejecucion&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get deployments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Generar un entrypoint al cluster (temporal para pruebas)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl proxy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;3. Explorar la App&lt;/h3&gt;
&lt;p&gt;Un Pod es un conjunto de containers que ejecutan aplicaciones y sus recursos
asociados.&lt;/p&gt;
&lt;p&gt;Los Pods son creados por Kubernetes al realizar el deploy de la app. Se crean
siempre en un nodo.&lt;/p&gt;
&lt;p&gt;Operaciones mas usadas de &lt;code&gt;kubectl&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get&lt;/span&gt;
&lt;span class="err"&gt;kubectl describe&lt;/span&gt;
&lt;span class="err"&gt;kubectl logs&lt;/span&gt;
&lt;span class="err"&gt;kubectl exec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Listar pods&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get pods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Para obtener información detallada de los Pods&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl describe pods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Para acceder a los Pods, que funcionan en una red aislada y privada, se utiliza
el &lt;code&gt;proxy&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl proxy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Dicho proxy expone temporalmente la red y permite la comunicación con el host.
Esto se utiliza para acceder a la API de los Pods y realizar consultas de forma
directa (Por ejemplo, usando el comando &lt;code&gt;curl&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Para diversas operaciones con los pods, es necesario obtener el nombre que
Kubernetes le asigno al mismo. Un comando para hacer esto es:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;export POD_NAME=$(kubectl get pods -o go-template --template '&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;range&lt;/span&gt; &lt;span class="nv"&gt;.items&lt;/span&gt;&lt;span class="cp"&gt;}}{{&lt;/span&gt;&lt;span class="nv"&gt;.metadata.name&lt;/span&gt;&lt;span class="cp"&gt;}}{{&lt;/span&gt;&lt;span class="s2"&gt;"\n"&lt;/span&gt;&lt;span class="cp"&gt;}}{{&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Para ver los logs:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl logs $POD_NAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Todo lo que los proceso envien a stdout es expuesto como logs del pod.&lt;/p&gt;
&lt;p&gt;Ejecutar comandos en un pod:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl exec $POD_NAME env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Abrir una consola en un POD:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl exec -ti $POD_NAME bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;4. Usar un servicio para exponer la App&lt;/h3&gt;
&lt;p&gt;Los Pods pueden ser reemplazados si es necesario. Desde que cada Pod tiene una
IP unica, las aplicaciones no deberian conocer dichas IPs para poder conectarse
a los Pods, porque estos puede "morir".&lt;/p&gt;
&lt;p&gt;Los servicios en kubernetes proveen una abstraccion que permite establecer
politicas de acceso sobre un conjunto lógico de Pods.&lt;/p&gt;
&lt;p&gt;Los servicios permiten que a los pods se les adjunten labels, con diferentes
objetivos (taggear versiones, separar versiones para test, debug y produccion).&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Listar servicios expuestos:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get services&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Exponer un servicio:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl expose deployment/kubernetes-bootcamp --type="NodePort" --port 8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver detalles de servicios:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl describe services/kubernetes-bootcamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver que puerto fue abierto externamente:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;.spec.ports&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;.nodePort&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;')&lt;/span&gt;
&lt;span class="x"&gt;echo NODE_PORT=$NODE_PORT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Una vez expuesto, se puede consultar el servicio directamente con:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;curl host01:$NODE_PORT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Consultar los pods que estan etiquetados con un label particular:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get pods -l run=kubernetes-bootcamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;El label en el caso anterior es &lt;code&gt;run=kubernetes-bootcamp&lt;/code&gt;. Funciona
identicamente para consultar servicios:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get services -l run=kubernetes-bootcamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Obtener el nombre del POD&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;export POD_NAME=$(kubectl get pods -o go-template --template '&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;range&lt;/span&gt; &lt;span class="nv"&gt;.items&lt;/span&gt;&lt;span class="cp"&gt;}}{{&lt;/span&gt;&lt;span class="nv"&gt;.metadata.name&lt;/span&gt;&lt;span class="cp"&gt;}}{{&lt;/span&gt;&lt;span class="s2"&gt;"\n"&lt;/span&gt;&lt;span class="cp"&gt;}}{{&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;')&lt;/span&gt;
&lt;span class="x"&gt;echo Name of the Pod: $POD_NAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Aplicar un nuevo label a un Pod:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl label pod $POD_NAME app=v1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Consultar el label recien aplicado:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl describe pods $POD_NAME&lt;/span&gt;
&lt;span class="err"&gt;kubectl get pods -l app=v1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Borrar un servicio:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl delete service -l run=kubernetes-bootcamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;5. Multiples instancias de una App&lt;/h3&gt;
&lt;p&gt;Escalar es incrementar el numero de instancias o pods para poder manejar
incrementos de trafico en la aplicación. Los services manejan el trafico hacia
los pods mendiante un load-balancer.&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Escalar (scale up) un deployment llamado kubernetes-bootcamp a 4 replicas:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl scale deployments/kubernetes-bootcamp --replicas=4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver los deployments:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get deployments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Controlar los pods (Tiene que haber 4):&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get pods -o wide&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver el deployment de forma mas detallada:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl describe deployments/kubernetes-bootcamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver el servicio:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl describe services/kubernetes-bootcamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Recuperar el nodo:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;.spec.ports&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;.nodePort&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;')&lt;/span&gt;
&lt;span class="x"&gt;echo NODE_PORT=$NODE_PORT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ejecutar varias veces:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;curl host01:$NODE_PORT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Deberian responder diferentes pods de la misma app.&lt;/p&gt;
&lt;p&gt;Ejecutar ahora solo 2 replicas (Scale down):&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl scale deployments/kubernetes-bootcamp --replicas=2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Confirmar el cambio:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get deployments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;6. Realizando actualizaciones progresivas&lt;/h3&gt;
&lt;p&gt;La idea es lograr actualizaciones sin que se experimente una caida del servicio,
esto permite poder actualizar las aplicaciones de forma mas seguida.&lt;/p&gt;
&lt;p&gt;Kubernetes permite esto mediante las Rolling Updates. Esto permite actualizar
sin tener downtimes y ademas puede ser revertido en caso de problemas
(rollbacks).&lt;/p&gt;
&lt;h4&gt;Tutorial interactivo&lt;/h4&gt;
&lt;p&gt;Ver imagen actual de los pods (Campo image):&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl describe pods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Actualizar la image:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver información de los Pods:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get pods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;No actualiza los viejos pods, sino que termina los anteirores y crea pods
nuevos.&lt;/p&gt;
&lt;p&gt;Verificar que la app actualizo:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;kubectl describe services/kubernetes-bootcamp&lt;/span&gt;
&lt;span class="x"&gt;export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;.spec.ports&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;.nodePort&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;')&lt;/span&gt;
&lt;span class="x"&gt;echo NODE_PORT=$NODE_PORT&lt;/span&gt;
&lt;span class="x"&gt;curl host01:$NODE_PORT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Tambien puede verificarse el exito mediante:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl rollout status deployments/kubernetes-bootcamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Deployar una version "con errores":&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ver problemas:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl get deployments&lt;/span&gt;
&lt;span class="err"&gt;kubectl get pods&lt;/span&gt;
&lt;span class="err"&gt;kubectl describe pods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Rollback:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;kubectl rollout undo deployments/kubernetes-bootcamp&lt;/span&gt;
&lt;span class="err"&gt;kubectl get pods&lt;/span&gt;
&lt;span class="err"&gt;kubectl describe pods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h2&gt;Dudas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;¿Un cluster kubernetes sirve para deploy de una app unica o muchas apps
 pueden convivir en el?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se pueden hacer deploys de varias apps y se iran acomodando en los recursos que
el cluster tenga disponibles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;¿Un Pod es equivalente a un container?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Un pod es un container de una aplicación en particular gestionado por kubernetes&lt;/p&gt;
&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Al querer ejecutar &lt;code&gt;minikube start&lt;/code&gt; se obtiene el error "Error starting host: Error getting state for host: machine does not exist".&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El error completo es:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ minikube start
Starting &lt;span class="nb"&gt;local&lt;/span&gt; Kubernetes v1.9.0 cluster...
Starting VM...
E0428 &lt;span class="m"&gt;17&lt;/span&gt;:06:43.557255   &lt;span class="m"&gt;18070&lt;/span&gt; start.go:159&lt;span class="o"&gt;]&lt;/span&gt; Error starting host: Error getting state &lt;span class="k"&gt;for&lt;/span&gt; host: machine does not exist.

 Retrying.
E0428 &lt;span class="m"&gt;17&lt;/span&gt;:06:43.557517   &lt;span class="m"&gt;18070&lt;/span&gt; start.go:165&lt;span class="o"&gt;]&lt;/span&gt; Error starting host:  Error getting state &lt;span class="k"&gt;for&lt;/span&gt; host: machine does not &lt;span class="nv"&gt;exist&lt;/span&gt;
&lt;span class="o"&gt;================================================================================&lt;/span&gt;
An error has occurred. Would you like to opt in to sending anonymized crash
information to minikube to &lt;span class="nb"&gt;help&lt;/span&gt; prevent future errors?
To opt out of these messages, run the command:
        minikube config &lt;span class="nb"&gt;set&lt;/span&gt; WantReportErrorPrompt &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="o"&gt;================================================================================&lt;/span&gt;
Please enter your response &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;: n
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Esto me pasó a mi por borrar en algun momento la vm de Virtualbox que crea minikube. La forma mas facil de recuperarse de este error es:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ minikube delete
$ minikube start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><category>cluster</category><category>containers</category><category>deploy</category><category>devops</category><category>kubernetes</category><category>orchestration</category><guid>http://tomasdelvechio.github.io/blog/algunas-notas-sobre-kubernetes/</guid><pubDate>Fri, 26 Jan 2018 03:18:56 GMT</pubDate></item></channel></rss>